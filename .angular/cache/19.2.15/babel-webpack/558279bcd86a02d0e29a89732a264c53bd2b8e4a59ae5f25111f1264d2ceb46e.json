{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    }\n    return this.router.createUrlTree(['/login'], {\n      queryParams: {\n        redirectUrl: state.url\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","auth","router","canActivate","route","state","isLoggedIn","createUrlTree","queryParams","redirectUrl","url","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree {\r\n    if (this.auth.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    return this.router.createUrlTree(['/login'], { queryParams: { redirectUrl: state.url } });\r\n  }\r\n} "],"mappings":";;;AAKA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEhEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,IAAI,CAACJ,IAAI,CAACK,UAAU,EAAE,EAAE;MAC1B,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,WAAW,EAAEJ,KAAK,CAACK;MAAG;IAAE,CAAE,CAAC;EAC3F;;;uCARWX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATjB,SAAS;MAAAkB,OAAA,EAATlB,SAAS,CAAAmB,IAAA;MAAAC,UAAA,EADI;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}