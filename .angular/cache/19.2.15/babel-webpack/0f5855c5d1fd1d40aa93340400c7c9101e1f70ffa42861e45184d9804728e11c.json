{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { switchMap } from 'rxjs';\nimport { LoadingComponent } from '../../../shared/components/loading/loading.component';\nlet NewsDetailComponent = class NewsDetailComponent {\n  constructor(route, newsService) {\n    this.route = route;\n    this.newsService = newsService;\n    this.isLoading$ = this.newsService.isLoading();\n    this.news$ = this.route.params.pipe(switchMap(params => this.newsService.getById(params['id'])));\n  }\n  ngOnInit() {}\n  toggleArchive(news) {\n    if (news.isArchived) {\n      this.newsService.unarchive(news.id).subscribe();\n    } else {\n      this.newsService.archive(news.id).subscribe();\n    }\n  }\n  shareArticle(news) {\n    if (navigator.share) {\n      navigator.share({\n        title: news.title,\n        text: news.summary,\n        url: window.location.href\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Article link copied to clipboard!');\n    }\n  }\n  printArticle() {\n    window.print();\n  }\n};\nNewsDetailComponent = __decorate([Component({\n  selector: 'app-news-detail',\n  standalone: true,\n  imports: [CommonModule, RouterModule, LoadingComponent],\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.scss']\n})], NewsDetailComponent);\nexport { NewsDetailComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","switchMap","LoadingComponent","NewsDetailComponent","constructor","route","newsService","isLoading$","isLoading","news$","params","pipe","getById","ngOnInit","toggleArchive","news","isArchived","unarchive","id","subscribe","archive","shareArticle","navigator","share","title","text","summary","url","window","location","href","clipboard","writeText","alert","printArticle","print","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\features\\news\\news-detail\\news-detail.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { Observable, switchMap } from 'rxjs';\n\nimport { NewsService } from '../../../core/services/news.service';\nimport { News } from '../../../core/models/news.model';\nimport { LoadingComponent } from '../../../shared/components/loading/loading.component';\n\n@Component({\n  selector: 'app-news-detail',\n  standalone: true,\n  imports: [CommonModule, RouterModule, LoadingComponent],\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.scss']\n})\nexport class NewsDetailComponent implements OnInit {\n  news$: Observable<News | undefined>;\n  isLoading$: Observable<boolean>;\n\n  constructor(\n    private route: ActivatedRoute,\n    private newsService: NewsService\n  ) {\n    this.isLoading$ = this.newsService.isLoading();\n    \n    this.news$ = this.route.params.pipe(\n      switchMap(params => this.newsService.getById(params['id']))\n    );\n  }\n\n  ngOnInit() {}\n\n  toggleArchive(news: News): void {\n    if (news.isArchived) {\n      this.newsService.unarchive(news.id).subscribe();\n    } else {\n      this.newsService.archive(news.id).subscribe();\n    }\n  }\n\n  shareArticle(news: News): void {\n    if (navigator.share) {\n      navigator.share({\n        title: news.title,\n        text: news.summary,\n        url: window.location.href\n      });\n    } else {\n      navigator.clipboard.writeText(window.location.href);\n      alert('Article link copied to clipboard!');\n    }\n  }\n\n  printArticle(): void {\n    window.print();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAwB,iBAAiB;AAC9D,SAAqBC,SAAS,QAAQ,MAAM;AAI5C,SAASC,gBAAgB,QAAQ,sDAAsD;AAShF,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YACUC,KAAqB,EACrBC,WAAwB;IADxB,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,WAAW,GAAXA,WAAW;IAEnB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,WAAW,CAACE,SAAS,EAAE;IAE9C,IAAI,CAACC,KAAK,GAAG,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,IAAI,CACjCV,SAAS,CAACS,MAAM,IAAI,IAAI,CAACJ,WAAW,CAACM,OAAO,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAC5D;EACH;EAEAG,QAAQA,CAAA,GAAI;EAEZC,aAAaA,CAACC,IAAU;IACtB,IAAIA,IAAI,CAACC,UAAU,EAAE;MACnB,IAAI,CAACV,WAAW,CAACW,SAAS,CAACF,IAAI,CAACG,EAAE,CAAC,CAACC,SAAS,EAAE;IACjD,CAAC,MAAM;MACL,IAAI,CAACb,WAAW,CAACc,OAAO,CAACL,IAAI,CAACG,EAAE,CAAC,CAACC,SAAS,EAAE;IAC/C;EACF;EAEAE,YAAYA,CAACN,IAAU;IACrB,IAAIO,SAAS,CAACC,KAAK,EAAE;MACnBD,SAAS,CAACC,KAAK,CAAC;QACdC,KAAK,EAAET,IAAI,CAACS,KAAK;QACjBC,IAAI,EAAEV,IAAI,CAACW,OAAO;QAClBC,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAACC;OACtB,CAAC;IACJ,CAAC,MAAM;MACLR,SAAS,CAACS,SAAS,CAACC,SAAS,CAACJ,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC;MACnDG,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF;EAEAC,YAAYA,CAAA;IACVN,MAAM,CAACO,KAAK,EAAE;EAChB;CACD;AAzCYhC,mBAAmB,GAAAiC,UAAA,EAP/BtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,iBAAiB;EAC3BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACxC,YAAY,EAAEC,YAAY,EAAEE,gBAAgB,CAAC;EACvDsC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWtC,mBAAmB,CAyC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}