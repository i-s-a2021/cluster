{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.auth.isLoggedIn()) {\n      return true;\n    }\n    return this.router.createUrlTree(['/login']);\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","auth","router","canActivate","isLoggedIn","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\core\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean | UrlTree {\r\n    if (this.auth.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    return this.router.createUrlTree(['/login']);\r\n  }\r\n} "],"mappings":";;;AAKA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEhEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,IAAI,CAACG,UAAU,EAAE,EAAE;MAC1B,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACF,MAAM,CAACG,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C;;;uCARWN,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATZ,SAAS;MAAAa,OAAA,EAATb,SAAS,CAAAc,IAAA;MAAAC,UAAA,EADI;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}