{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { map, startWith, switchMap, filter } from 'rxjs/operators';\nimport { LoadingComponent } from '../../shared/components/loading/loading.component';\nlet DashboardComponent = class DashboardComponent {\n  constructor(newsService, userService, fb) {\n    this.newsService = newsService;\n    this.userService = userService;\n    this.fb = fb;\n    this.filterForm = this.fb.group({\n      searchTerm: [''],\n      tag: [''],\n      userSearch: ['']\n    });\n    this.filteredNews$ = this.filterForm.valueChanges.pipe(startWith(this.filterForm.value), switchMap(formValue => this.newsService.getFilteredNews({\n      searchTerm: formValue.searchTerm,\n      tags: formValue.tag ? [formValue.tag] : []\n    })), map(news => news ?? []));\n    this.filteredUsers$ = this.filterForm.valueChanges.pipe(startWith(this.filterForm.value), switchMap(formValue => this.userService.getFiltered({\n      searchTerm: formValue.userSearch\n    })));\n    this.statistics$ = this.filteredNews$.pipe(map(news => {\n      const totalNews = news.length;\n      const publishedNews = news.filter(n => !n.isArchived).length;\n      const archivedNews = news.filter(n => n.isArchived).length;\n      const newsPerMonth = {};\n      const newsPerTag = {};\n      news.forEach(item => {\n        const monthKey = new Date(item.publishDate).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short'\n        });\n        newsPerMonth[monthKey] = (newsPerMonth[monthKey] || 0) + 1;\n        item.tags.forEach(tag => {\n          newsPerTag[tag] = (newsPerTag[tag] || 0) + 1;\n        });\n      });\n      return {\n        totalNews,\n        publishedNews,\n        archivedNews,\n        newsPerMonth,\n        newsPerTag\n      };\n    }));\n    this.activeUsers$ = this.filteredUsers$.pipe(map(users => users.filter(u => u.isActive)));\n    this.isLoading$ = this.newsService.isLoading$;\n    this.recentNews$ = this.filteredNews$.pipe(map(news => news.filter(n => !n.isArchived).sort((a, b) => new Date(b.publishDate).getTime() - new Date(a.publishDate).getTime()).slice(0, 5)));\n    const EMPTY_CHART_DATA = {\n      labels: [],\n      datasets: []\n    };\n    this.tagChartData$ = this.filteredNews$.pipe(filter(news => !!news), map(news => {\n      const tagCounts = {};\n      news.forEach(item => item.tags.forEach(tag => tagCounts[tag] = (tagCounts[tag] || 0) + 1));\n      return {\n        labels: Object.keys(tagCounts),\n        datasets: [{\n          data: Object.values(tagCounts),\n          backgroundColor: ['#2563eb', '#818cf8', '#f59e42', '#10b981', '#f43f5e', '#fbbf24', '#a21caf']\n        }]\n      };\n    }), startWith(EMPTY_CHART_DATA));\n    this.monthlyChartData$ = this.filteredNews$.pipe(filter(news => !!news), map(news => {\n      const monthCounts = {};\n      news.forEach(item => {\n        const monthKey = new Date(item.publishDate).toLocaleDateString('en-US', {\n          year: 'numeric',\n          month: 'short'\n        });\n        monthCounts[monthKey] = (monthCounts[monthKey] || 0) + 1;\n      });\n      const labels = Object.keys(monthCounts).sort();\n      return {\n        labels,\n        datasets: [{\n          data: labels.map(label => monthCounts[label]),\n          label: 'News Published',\n          borderColor: '#2563eb',\n          backgroundColor: 'rgba(37,99,235,0.2)',\n          fill: true\n        }]\n      };\n    }), startWith(EMPTY_CHART_DATA));\n    this.chartOptions = {};\n    this.lineChartOptions = {};\n  }\n  ngOnInit() {}\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterModule, LoadingComponent, BaseChartDirective, ReactiveFormsModule],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","BaseChartDirective","ReactiveFormsModule","map","startWith","switchMap","filter","LoadingComponent","DashboardComponent","constructor","newsService","userService","fb","filterForm","group","searchTerm","tag","userSearch","filteredNews$","valueChanges","pipe","value","formValue","getFilteredNews","tags","news","filteredUsers$","getFiltered","statistics$","totalNews","length","publishedNews","n","isArchived","archivedNews","newsPerMonth","newsPerTag","forEach","item","monthKey","Date","publishDate","toLocaleDateString","year","month","activeUsers$","users","u","isActive","isLoading$","recentNews$","sort","a","b","getTime","slice","EMPTY_CHART_DATA","labels","datasets","tagChartData$","tagCounts","Object","keys","data","values","backgroundColor","monthlyChartData$","monthCounts","label","borderColor","fill","chartOptions","lineChartOptions","ngOnInit","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\features\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { BaseChartDirective } from 'ng2-charts';\nimport { Chart, ChartConfiguration, ChartData, ChartType, ChartTypeRegistry } from 'chart.js';\nimport { ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { map, startWith, switchMap, filter, defaultIfEmpty } from 'rxjs/operators';\n\nimport { NewsService } from '../../core/services/news.service';\nimport { UserService } from '../../core/services/user.service';\nimport { News, NewsStatistics } from '../../core/models/news.model';\nimport { User } from '../../core/models/user.model';\nimport { LoadingComponent } from '../../shared/components/loading/loading.component';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterModule, LoadingComponent, BaseChartDirective, ReactiveFormsModule],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  statistics$: Observable<NewsStatistics>;\n  activeUsers$: Observable<User[]>;\n  isLoading$: Observable<boolean>;\n  recentNews$: Observable<News[]>;\n  tagChartData$: Observable<ChartData<keyof ChartTypeRegistry>>;\n  chartOptions: ChartConfiguration['options'];\n  monthlyChartData$: Observable<ChartData<keyof ChartTypeRegistry>>;\n  lineChartOptions: ChartConfiguration['options'];\n  filterForm: FormGroup;\n  filteredNews$: Observable<News[]>;\n  filteredUsers$: Observable<User[]>;\n\n  constructor(\n    private newsService: NewsService,\n    private userService: UserService,\n    private fb: FormBuilder\n  ) {\n    this.filterForm = this.fb.group({\n      searchTerm: [''],\n      tag: [''],\n      userSearch: ['']\n    });\n    this.filteredNews$ = this.filterForm.valueChanges.pipe(\n      startWith(this.filterForm.value),\n      switchMap(formValue => this.newsService.getFilteredNews({\n        searchTerm: formValue.searchTerm,\n        tags: formValue.tag ? [formValue.tag] : []\n      })),\n      map(news => news ?? [])\n    );\n    this.filteredUsers$ = this.filterForm.valueChanges.pipe(\n      startWith(this.filterForm.value),\n      switchMap(formValue => this.userService.getFiltered({\n        searchTerm: formValue.userSearch\n      }))\n    );\n    this.statistics$ = this.filteredNews$.pipe(\n      map(news => {\n        const totalNews = news.length;\n        const publishedNews = news.filter(n => !n.isArchived).length;\n        const archivedNews = news.filter(n => n.isArchived).length;\n        const newsPerMonth: { [key: string]: number } = {};\n        const newsPerTag: { [key: string]: number } = {};\n        news.forEach(item => {\n          const monthKey = new Date(item.publishDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' });\n          newsPerMonth[monthKey] = (newsPerMonth[monthKey] || 0) + 1;\n          item.tags.forEach(tag => {\n            newsPerTag[tag] = (newsPerTag[tag] || 0) + 1;\n          });\n        });\n        return { totalNews, publishedNews, archivedNews, newsPerMonth, newsPerTag };\n      })\n    );\n    this.activeUsers$ = this.filteredUsers$.pipe(\n      map(users => users.filter(u => u.isActive))\n    );\n    this.isLoading$ = this.newsService.isLoading$;\n    this.recentNews$ = this.filteredNews$.pipe(\n      map(news => news.filter(n => !n.isArchived).sort((a, b) => new Date(b.publishDate).getTime() - new Date(a.publishDate).getTime()).slice(0, 5))\n    );\n    const EMPTY_CHART_DATA: ChartData<keyof ChartTypeRegistry> = { labels: [], datasets: [] };\n    this.tagChartData$ = this.filteredNews$.pipe(\n      filter((news): news is News[] => !!news),\n      map((news: News[]): ChartData<keyof ChartTypeRegistry> => {\n        const tagCounts: { [key: string]: number } = {};\n        news.forEach(item => item.tags.forEach(tag => tagCounts[tag] = (tagCounts[tag] || 0) + 1));\n        return {\n          labels: Object.keys(tagCounts),\n          datasets: [{ data: Object.values(tagCounts), backgroundColor: ['#2563eb', '#818cf8', '#f59e42', '#10b981', '#f43f5e', '#fbbf24', '#a21caf'] }]\n        };\n      }),\n      startWith(EMPTY_CHART_DATA)\n    );\n    this.monthlyChartData$ = this.filteredNews$.pipe(\n      filter((news): news is News[] => !!news),\n      map((news: News[]): ChartData<keyof ChartTypeRegistry> => {\n        const monthCounts: { [key: string]: number } = {};\n        news.forEach(item => {\n          const monthKey = new Date(item.publishDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' });\n          monthCounts[monthKey] = (monthCounts[monthKey] || 0) + 1;\n        });\n        const labels = Object.keys(monthCounts).sort();\n        return {\n          labels,\n          datasets: [{ data: labels.map(label => monthCounts[label]), label: 'News Published', borderColor: '#2563eb', backgroundColor: 'rgba(37,99,235,0.2)', fill: true }]\n        };\n      }),\n      startWith(EMPTY_CHART_DATA)\n    );\n    this.chartOptions = {};\n    this.lineChartOptions = {};\n  }\n\n  ngOnInit(): void {}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}