{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { LoadingComponent } from '../../shared/components/loading/loading.component';\nlet UsersComponent = class UsersComponent {\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.isLoading$ = new Observable();\n    this.filteredUsers$ = new Observable();\n    this.allUsers$ = new Observable();\n    this.toastMessage = '';\n    this.toastType = '';\n    this.lastDeletedUser = null;\n    this.filterForm = this.fb.group({\n      searchTerm: [''],\n      role: [''],\n      status: ['']\n    });\n    this.isLoading$ = this.userService.isLoading$;\n    this.filteredUsers$ = this.filterForm.valueChanges.pipe(startWith(this.filterForm.value), switchMap(formValue => this.userService.getFiltered({\n      ...formValue,\n      isActive: formValue.status === 'active' ? true : formValue.status === 'inactive' ? false : undefined\n    })));\n    this.allUsers$ = this.userService.getAll();\n    this.activeUsersCount$ = this.filteredUsers$.pipe(map(users => users.filter(u => u.isActive).length));\n    this.adminCount$ = this.filteredUsers$.pipe(map(users => users.filter(u => u.roles.includes('admin')).length));\n    this.inactiveCount$ = this.filteredUsers$.pipe(map(users => users.filter(u => !u.isActive).length));\n  }\n  ngOnInit() {}\n  toggleUserStatus(user) {\n    this.userService.toggleUserStatus(user.id).subscribe(() => {\n      this.toastMessage = `User '${user.name}' has been ${user.isActive ? 'activated' : 'deactivated'} successfully.`;\n      this.toastType = 'success';\n      if (this.toastTimeout) {\n        clearTimeout(this.toastTimeout);\n      }\n      this.toastTimeout = setTimeout(() => {\n        this.toastMessage = '';\n      }, 3000);\n    }, error => {\n      this.toastMessage = `Failed to ${user.isActive ? 'activate' : 'deactivate'} user '${user.name}'. Please try again later.`;\n      this.toastType = 'error';\n      if (this.toastTimeout) {\n        clearTimeout(this.toastTimeout);\n      }\n      this.toastTimeout = setTimeout(() => {\n        this.toastMessage = '';\n      }, 3000);\n    });\n  }\n  deleteUser(user) {\n    if (window.confirm(`Are you sure you want to delete user '${user.name}'? This action cannot be undone.`)) {\n      this.userService.deleteUser(user.id).subscribe(() => {\n        this.toastMessage = `User '${user.name}' has been deleted successfully.`;\n        this.toastType = 'success';\n        this.lastDeletedUser = user;\n        if (this.toastTimeout) {\n          clearTimeout(this.toastTimeout);\n        }\n        this.toastTimeout = setTimeout(() => {\n          this.toastMessage = '';\n        }, 3000);\n      }, error => {\n        this.toastMessage = `Failed to delete user '${user.name}'. Please try again later.`;\n        this.toastType = 'error';\n        if (this.toastTimeout) {\n          clearTimeout(this.toastTimeout);\n        }\n        this.toastTimeout = setTimeout(() => {\n          this.toastMessage = '';\n        }, 3000);\n      });\n    }\n  }\n  showToast(message, type) {\n    this.toastMessage = message;\n    this.toastType = type;\n    if (this.toastTimeout) {\n      clearTimeout(this.toastTimeout);\n    }\n    this.toastTimeout = setTimeout(() => {\n      this.toastMessage = '';\n    }, 3000);\n  }\n  undoDeleteUser() {\n    if (this.lastDeletedUser) {\n      const user = this.lastDeletedUser;\n      this.userService.restoreUser(user);\n      this.showToast(`User '${user.name}' has been restored.`, 'undo');\n      this.lastDeletedUser = null;\n    }\n  }\n};\nUsersComponent = __decorate([Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, LoadingComponent],\n  template: `\n    <div class=\"container-fluid px-4 py-4 fade-in\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\n            <h1 class=\"h3 mb-0\">\n              <i class=\"fas fa-users me-2\"></i>\n              User Management\n            </h1>\n            <button class=\"btn btn-primary mb-3\" routerLink=\"add\">\n              <i class=\"fas fa-user-plus me-2\"></i> Add User\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <router-outlet></router-outlet>\n\n      <!-- Search and Filter -->\n      <div class=\"search-container\">\n        <form [formGroup]=\"filterForm\" class=\"row g-3\">\n          <div class=\"col-md-6\">\n            <label for=\"searchTerm\" class=\"form-label\">Search Users</label>\n            <input \n              type=\"text\" \n              class=\"form-control\" \n              id=\"searchTerm\"\n              formControlName=\"searchTerm\"\n              placeholder=\"Search by name or email...\">\n          </div>\n          <div class=\"col-md-3\">\n            <label for=\"role\" class=\"form-label\">Role</label>\n            <select class=\"form-select\" id=\"role\" formControlName=\"role\">\n              <option value=\"\">All Roles</option>\n              <option value=\"admin\">Admin</option>\n              <option value=\"editor\">Editor</option>\n              <option value=\"author\">Author</option>\n            </select>\n          </div>\n          <div class=\"col-md-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select class=\"form-select\" id=\"status\" formControlName=\"status\">\n              <option value=\"\">All Status</option>\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n          </div>\n        </form>\n      </div>\n\n      <!-- Users List -->\n      <div *ngIf=\"isLoading$ | async\">\n        <app-loading [height]=\"300\" message=\"Loading users...\"></app-loading>\n      </div>\n\n      <div *ngIf=\"!(isLoading$ | async)\">\n        <div class=\"row\">\n          <div class=\"col-12\" *ngIf=\"(filteredUsers$ | async)?.length === 0\">\n            <div class=\"card\">\n              <div class=\"card-body text-center py-5\">\n                <i class=\"fas fa-users fa-3x text-muted mb-3\"></i>\n                <h5 class=\"text-muted\">No users found</h5>\n                <p class=\"text-muted\">No users match your search criteria.</p>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-12\" *ngFor=\"let user of filteredUsers$ | async\">\n            <div class=\"card mb-3\">\n              <div class=\"card-body\">\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-2 text-center\">\n                    <img \n                      [src]=\"user.image || 'https://images.pexels.com/photos/3763188/pexels-photo-3763188.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&dpr=2'\" \n                      [alt]=\"user.name\"\n                      class=\"rounded-circle\"\n                      width=\"80\" \n                      height=\"80\">\n                  </div>\n                  <div class=\"col-md-4\">\n                    <h5 class=\"mb-1\">{{ user.name }}</h5>\n                    <p class=\"text-muted mb-1\">{{ user.email }}</p>\n                    <small class=\"text-muted\">\n                      <i class=\"fas fa-calendar me-1\"></i>\n                      Joined {{ user.createdAt | date:'mediumDate' }}\n                    </small>\n                  </div>\n                  <div class=\"col-md-2 text-center\">\n                    <span class=\"badge\" \n                          [class.bg-primary]=\"user.roles[0] === 'admin'\"\n                          [class.bg-success]=\"user.roles[0] === 'editor'\"\n                          [class.bg-info]=\"user.roles[0] === 'author'\">\n                      {{ user.roles[0] | titlecase }}\n                    </span>\n                  </div>\n                  <div class=\"col-md-2 text-center\">\n                    <span class=\"badge\" \n                          [class.bg-success]=\"user.isActive\"\n                          [class.bg-secondary]=\"!user.isActive\">\n                      {{ user.isActive ? 'Active' : 'Inactive' }}\n                    </span>\n                  </div>\n                  <div class=\"col-md-2 text-end\">\n                    <div class=\"btn-group\">\n                      <button \n                        class=\"btn btn-sm btn-outline-primary\"\n                        title=\"View Profile\"\n                        disabled>\n                        <i class=\"fas fa-eye\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-secondary\"\n                        title=\"Edit User\"\n                        [routerLink]=\"['./', user.id, 'edit']\">\n                        <i class=\"fas fa-edit\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm\"\n                        [class.btn-outline-success]=\"!user.isActive\"\n                        [class.btn-outline-warning]=\"user.isActive\"\n                        [title]=\"user.isActive ? 'Deactivate User' : 'Activate User'\"\n                        (click)=\"toggleUserStatus(user)\">\n                        <i class=\"fas\" \n                           [class.fa-user-check]=\"!user.isActive\"\n                           [class.fa-user-times]=\"user.isActive\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-danger\"\n                        title=\"Delete User\"\n                        (click)=\"deleteUser(user)\">\n                        <i class=\"fas fa-trash\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- User Statistics -->\n      <div class=\"row mt-4\">\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ (allUsers$ | async)?.length || 0 }}</div>\n                  <div class=\"stat-label\">Total Users</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-users fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ activeUsersCount$ | async }}</div>\n                  <div class=\"stat-label\">Active Users</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-user-check fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ adminCount$ | async }}</div>\n                  <div class=\"stat-label\">Admins</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-user-shield fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ inactiveCount$ | async }}</div>\n                  <div class=\"stat-label\">Inactive</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-user-times fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Toast Message -->\n      <div *ngIf=\"toastMessage\" [ngClass]=\"'toast-message fade-in mb-3 toast-' + toastType\">\n        <span class=\"toast-icon\" *ngIf=\"toastType === 'success'\">✔️</span>\n        <span class=\"toast-icon\" *ngIf=\"toastType === 'error'\">❌</span>\n        <span class=\"toast-icon\" *ngIf=\"toastType === 'undo'\">↩️</span>\n        {{ toastMessage }}\n        <button *ngIf=\"toastType === 'success' && lastDeletedUser\" class=\"btn btn-link btn-sm toast-undo-btn\" (click)=\"undoDeleteUser()\">Undo</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .search-container {\n      background: #fff;\n      border-radius: 1rem;\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\n      padding: 2rem 1.5rem 1.5rem 1.5rem;\n      margin-bottom: 2rem;\n      margin-top: 1rem;\n      border: 1px solid #e5e7eb;\n      transition: box-shadow 0.2s;\n    }\n    .search-container:hover, .search-container:focus-within {\n      box-shadow: 0 4px 24px rgba(37,99,235,0.10);\n      border-color: #2563eb;\n    }\n    .search-container form {\n      margin-bottom: 0;\n    }\n    .search-container .form-label {\n      font-weight: 500;\n      color: #374151;\n      margin-bottom: 0.25rem;\n    }\n    .search-container .form-control, .search-container .form-select {\n      border-radius: 0.5rem;\n      border: 1px solid #d1d5db;\n      transition: border-color 0.2s, box-shadow 0.2s;\n      box-shadow: none;\n    }\n    .search-container .form-control:focus, .search-container .form-select:focus {\n      border-color: #2563eb;\n      box-shadow: 0 0 0 2px rgba(37,99,235,0.10);\n    }\n    .search-container .btn {\n      border-radius: 0.5rem;\n      font-weight: 500;\n      padding: 0.5rem 1.25rem;\n      margin-right: 0.5rem;\n      margin-bottom: 0.25rem;\n      transition: background 0.2s, color 0.2s;\n    }\n    .search-container .btn:last-child {\n      margin-right: 0;\n    }\n    .search-container .btn-outline-primary:hover, .search-container .btn-outline-primary:focus {\n      background: #2563eb;\n      color: #fff;\n      border-color: #2563eb;\n    }\n    .search-container .btn-outline-secondary:hover, .search-container .btn-outline-secondary:focus {\n      background: #6b7280;\n      color: #fff;\n      border-color: #6b7280;\n    }\n    .card, .stat-card {\n      border-radius: 1rem;\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\n      border: 1px solid #e5e7eb;\n      margin-bottom: 1.5rem;\n      transition: box-shadow 0.2s, border-color 0.2s;\n    }\n    .card:hover, .stat-card:hover {\n      box-shadow: 0 4px 24px rgba(37,99,235,0.10);\n      border-color: #2563eb;\n    }\n    @media (max-width: 767px) {\n      .search-container {\n        padding: 1rem 0.5rem;\n      }\n    }\n    .toast-message {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 1rem;\n      background-color: #4caf50;\n      color: #fff;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n      transition: opacity 0.3s;\n    }\n    .fade-in {\n      opacity: 1;\n    }\n    .fade-out {\n      opacity: 0;\n    }\n    .toast-success {\n      background-color: #4caf50;\n    }\n    .toast-error {\n      background-color: #f44336;\n    }\n    .toast-undo {\n      background-color: #2196F3;\n    }\n    .toast-icon {\n      margin-right: 0.5rem;\n    }\n    .toast-undo-btn {\n      margin-left: 0.5rem;\n    }\n  `]\n})], UsersComponent);\nexport { UsersComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","ReactiveFormsModule","Observable","map","startWith","switchMap","LoadingComponent","UsersComponent","constructor","fb","userService","isLoading$","filteredUsers$","allUsers$","toastMessage","toastType","lastDeletedUser","filterForm","group","searchTerm","role","status","valueChanges","pipe","value","formValue","getFiltered","isActive","undefined","getAll","activeUsersCount$","users","filter","u","length","adminCount$","roles","includes","inactiveCount$","ngOnInit","toggleUserStatus","user","id","subscribe","name","toastTimeout","clearTimeout","setTimeout","error","deleteUser","window","confirm","showToast","message","type","undoDeleteUser","restoreUser","__decorate","selector","standalone","imports","template","styles"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\features\\users\\users.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\n\nimport { UserService } from '../../core/services/user.service';\nimport { User, UserFilter } from '../../core/models/user.model';\nimport { LoadingComponent } from '../../shared/components/loading/loading.component';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, LoadingComponent],\n  template: `\n    <div class=\"container-fluid px-4 py-4 fade-in\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"d-flex justify-content-between align-items-center mb-4\">\n            <h1 class=\"h3 mb-0\">\n              <i class=\"fas fa-users me-2\"></i>\n              User Management\n            </h1>\n            <button class=\"btn btn-primary mb-3\" routerLink=\"add\">\n              <i class=\"fas fa-user-plus me-2\"></i> Add User\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <router-outlet></router-outlet>\n\n      <!-- Search and Filter -->\n      <div class=\"search-container\">\n        <form [formGroup]=\"filterForm\" class=\"row g-3\">\n          <div class=\"col-md-6\">\n            <label for=\"searchTerm\" class=\"form-label\">Search Users</label>\n            <input \n              type=\"text\" \n              class=\"form-control\" \n              id=\"searchTerm\"\n              formControlName=\"searchTerm\"\n              placeholder=\"Search by name or email...\">\n          </div>\n          <div class=\"col-md-3\">\n            <label for=\"role\" class=\"form-label\">Role</label>\n            <select class=\"form-select\" id=\"role\" formControlName=\"role\">\n              <option value=\"\">All Roles</option>\n              <option value=\"admin\">Admin</option>\n              <option value=\"editor\">Editor</option>\n              <option value=\"author\">Author</option>\n            </select>\n          </div>\n          <div class=\"col-md-3\">\n            <label for=\"status\" class=\"form-label\">Status</label>\n            <select class=\"form-select\" id=\"status\" formControlName=\"status\">\n              <option value=\"\">All Status</option>\n              <option value=\"active\">Active</option>\n              <option value=\"inactive\">Inactive</option>\n            </select>\n          </div>\n        </form>\n      </div>\n\n      <!-- Users List -->\n      <div *ngIf=\"isLoading$ | async\">\n        <app-loading [height]=\"300\" message=\"Loading users...\"></app-loading>\n      </div>\n\n      <div *ngIf=\"!(isLoading$ | async)\">\n        <div class=\"row\">\n          <div class=\"col-12\" *ngIf=\"(filteredUsers$ | async)?.length === 0\">\n            <div class=\"card\">\n              <div class=\"card-body text-center py-5\">\n                <i class=\"fas fa-users fa-3x text-muted mb-3\"></i>\n                <h5 class=\"text-muted\">No users found</h5>\n                <p class=\"text-muted\">No users match your search criteria.</p>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-12\" *ngFor=\"let user of filteredUsers$ | async\">\n            <div class=\"card mb-3\">\n              <div class=\"card-body\">\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-2 text-center\">\n                    <img \n                      [src]=\"user.image || 'https://images.pexels.com/photos/3763188/pexels-photo-3763188.jpeg?auto=compress&cs=tinysrgb&w=100&h=100&dpr=2'\" \n                      [alt]=\"user.name\"\n                      class=\"rounded-circle\"\n                      width=\"80\" \n                      height=\"80\">\n                  </div>\n                  <div class=\"col-md-4\">\n                    <h5 class=\"mb-1\">{{ user.name }}</h5>\n                    <p class=\"text-muted mb-1\">{{ user.email }}</p>\n                    <small class=\"text-muted\">\n                      <i class=\"fas fa-calendar me-1\"></i>\n                      Joined {{ user.createdAt | date:'mediumDate' }}\n                    </small>\n                  </div>\n                  <div class=\"col-md-2 text-center\">\n                    <span class=\"badge\" \n                          [class.bg-primary]=\"user.roles[0] === 'admin'\"\n                          [class.bg-success]=\"user.roles[0] === 'editor'\"\n                          [class.bg-info]=\"user.roles[0] === 'author'\">\n                      {{ user.roles[0] | titlecase }}\n                    </span>\n                  </div>\n                  <div class=\"col-md-2 text-center\">\n                    <span class=\"badge\" \n                          [class.bg-success]=\"user.isActive\"\n                          [class.bg-secondary]=\"!user.isActive\">\n                      {{ user.isActive ? 'Active' : 'Inactive' }}\n                    </span>\n                  </div>\n                  <div class=\"col-md-2 text-end\">\n                    <div class=\"btn-group\">\n                      <button \n                        class=\"btn btn-sm btn-outline-primary\"\n                        title=\"View Profile\"\n                        disabled>\n                        <i class=\"fas fa-eye\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-secondary\"\n                        title=\"Edit User\"\n                        [routerLink]=\"['./', user.id, 'edit']\">\n                        <i class=\"fas fa-edit\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm\"\n                        [class.btn-outline-success]=\"!user.isActive\"\n                        [class.btn-outline-warning]=\"user.isActive\"\n                        [title]=\"user.isActive ? 'Deactivate User' : 'Activate User'\"\n                        (click)=\"toggleUserStatus(user)\">\n                        <i class=\"fas\" \n                           [class.fa-user-check]=\"!user.isActive\"\n                           [class.fa-user-times]=\"user.isActive\"></i>\n                      </button>\n                      <button \n                        class=\"btn btn-sm btn-outline-danger\"\n                        title=\"Delete User\"\n                        (click)=\"deleteUser(user)\">\n                        <i class=\"fas fa-trash\"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- User Statistics -->\n      <div class=\"row mt-4\">\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ (allUsers$ | async)?.length || 0 }}</div>\n                  <div class=\"stat-label\">Total Users</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-users fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ activeUsersCount$ | async }}</div>\n                  <div class=\"stat-label\">Active Users</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-user-check fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ adminCount$ | async }}</div>\n                  <div class=\"stat-label\">Admins</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-user-shield fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-md-3\">\n          <div class=\"card stat-card\">\n            <div class=\"card-body\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"flex-grow-1\">\n                  <div class=\"stat-value\">{{ inactiveCount$ | async }}</div>\n                  <div class=\"stat-label\">Inactive</div>\n                </div>\n                <div class=\"ms-3\">\n                  <i class=\"fas fa-user-times fa-2x\"></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Toast Message -->\n      <div *ngIf=\"toastMessage\" [ngClass]=\"'toast-message fade-in mb-3 toast-' + toastType\">\n        <span class=\"toast-icon\" *ngIf=\"toastType === 'success'\">✔️</span>\n        <span class=\"toast-icon\" *ngIf=\"toastType === 'error'\">❌</span>\n        <span class=\"toast-icon\" *ngIf=\"toastType === 'undo'\">↩️</span>\n        {{ toastMessage }}\n        <button *ngIf=\"toastType === 'success' && lastDeletedUser\" class=\"btn btn-link btn-sm toast-undo-btn\" (click)=\"undoDeleteUser()\">Undo</button>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .search-container {\n      background: #fff;\n      border-radius: 1rem;\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\n      padding: 2rem 1.5rem 1.5rem 1.5rem;\n      margin-bottom: 2rem;\n      margin-top: 1rem;\n      border: 1px solid #e5e7eb;\n      transition: box-shadow 0.2s;\n    }\n    .search-container:hover, .search-container:focus-within {\n      box-shadow: 0 4px 24px rgba(37,99,235,0.10);\n      border-color: #2563eb;\n    }\n    .search-container form {\n      margin-bottom: 0;\n    }\n    .search-container .form-label {\n      font-weight: 500;\n      color: #374151;\n      margin-bottom: 0.25rem;\n    }\n    .search-container .form-control, .search-container .form-select {\n      border-radius: 0.5rem;\n      border: 1px solid #d1d5db;\n      transition: border-color 0.2s, box-shadow 0.2s;\n      box-shadow: none;\n    }\n    .search-container .form-control:focus, .search-container .form-select:focus {\n      border-color: #2563eb;\n      box-shadow: 0 0 0 2px rgba(37,99,235,0.10);\n    }\n    .search-container .btn {\n      border-radius: 0.5rem;\n      font-weight: 500;\n      padding: 0.5rem 1.25rem;\n      margin-right: 0.5rem;\n      margin-bottom: 0.25rem;\n      transition: background 0.2s, color 0.2s;\n    }\n    .search-container .btn:last-child {\n      margin-right: 0;\n    }\n    .search-container .btn-outline-primary:hover, .search-container .btn-outline-primary:focus {\n      background: #2563eb;\n      color: #fff;\n      border-color: #2563eb;\n    }\n    .search-container .btn-outline-secondary:hover, .search-container .btn-outline-secondary:focus {\n      background: #6b7280;\n      color: #fff;\n      border-color: #6b7280;\n    }\n    .card, .stat-card {\n      border-radius: 1rem;\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\n      border: 1px solid #e5e7eb;\n      margin-bottom: 1.5rem;\n      transition: box-shadow 0.2s, border-color 0.2s;\n    }\n    .card:hover, .stat-card:hover {\n      box-shadow: 0 4px 24px rgba(37,99,235,0.10);\n      border-color: #2563eb;\n    }\n    @media (max-width: 767px) {\n      .search-container {\n        padding: 1rem 0.5rem;\n      }\n    }\n    .toast-message {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      padding: 1rem;\n      background-color: #4caf50;\n      color: #fff;\n      border-radius: 5px;\n      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n      transition: opacity 0.3s;\n    }\n    .fade-in {\n      opacity: 1;\n    }\n    .fade-out {\n      opacity: 0;\n    }\n    .toast-success {\n      background-color: #4caf50;\n    }\n    .toast-error {\n      background-color: #f44336;\n    }\n    .toast-undo {\n      background-color: #2196F3;\n    }\n    .toast-icon {\n      margin-right: 0.5rem;\n    }\n    .toast-undo-btn {\n      margin-left: 0.5rem;\n    }\n  `]\n})\nexport class UsersComponent implements OnInit {\n  filterForm: FormGroup;\n  isLoading$: Observable<boolean> = new Observable();\n  filteredUsers$: Observable<User[]> = new Observable();\n  allUsers$: Observable<User[]> = new Observable();\n  activeUsersCount$: Observable<number>;\n  adminCount$: Observable<number>;\n  inactiveCount$: Observable<number>;\n  toastMessage: string = '';\n  toastTimeout: any;\n  toastType: string = '';\n  lastDeletedUser: User | null = null;\n\n  constructor(private fb: FormBuilder, private userService: UserService) {\n    this.filterForm = this.fb.group({\n      searchTerm: [''],\n      role: [''],\n      status: ['']\n    });\n    this.isLoading$ = this.userService.isLoading$;\n    this.filteredUsers$ = this.filterForm.valueChanges.pipe(\n      startWith(this.filterForm.value),\n      switchMap(formValue => this.userService.getFiltered({\n        ...formValue,\n        isActive: formValue.status === 'active' ? true : formValue.status === 'inactive' ? false : undefined\n      }))\n    );\n    this.allUsers$ = this.userService.getAll();\n    this.activeUsersCount$ = this.filteredUsers$.pipe(map(users => users.filter(u => u.isActive).length));\n    this.adminCount$ = this.filteredUsers$.pipe(map(users => users.filter(u => u.roles.includes('admin')).length));\n    this.inactiveCount$ = this.filteredUsers$.pipe(map(users => users.filter(u => !u.isActive).length));\n  }\n\n  ngOnInit(): void {}\n\n  toggleUserStatus(user: User) {\n    this.userService.toggleUserStatus(user.id).subscribe(\n      () => {\n        this.toastMessage = `User '${user.name}' has been ${user.isActive ? 'activated' : 'deactivated'} successfully.`;\n        this.toastType = 'success';\n        if (this.toastTimeout) {\n          clearTimeout(this.toastTimeout);\n        }\n        this.toastTimeout = setTimeout(() => {\n          this.toastMessage = '';\n        }, 3000);\n      },\n      (error) => {\n        this.toastMessage = `Failed to ${user.isActive ? 'activate' : 'deactivate'} user '${user.name}'. Please try again later.`;\n        this.toastType = 'error';\n        if (this.toastTimeout) {\n          clearTimeout(this.toastTimeout);\n        }\n        this.toastTimeout = setTimeout(() => {\n          this.toastMessage = '';\n        }, 3000);\n      }\n    );\n  }\n\n  deleteUser(user: User) {\n    if (window.confirm(`Are you sure you want to delete user '${user.name}'? This action cannot be undone.`)) {\n      this.userService.deleteUser(user.id).subscribe(\n        () => {\n          this.toastMessage = `User '${user.name}' has been deleted successfully.`;\n          this.toastType = 'success';\n          this.lastDeletedUser = user;\n          if (this.toastTimeout) {\n            clearTimeout(this.toastTimeout);\n          }\n          this.toastTimeout = setTimeout(() => {\n            this.toastMessage = '';\n          }, 3000);\n        },\n        (error) => {\n          this.toastMessage = `Failed to delete user '${user.name}'. Please try again later.`;\n          this.toastType = 'error';\n          if (this.toastTimeout) {\n            clearTimeout(this.toastTimeout);\n          }\n          this.toastTimeout = setTimeout(() => {\n            this.toastMessage = '';\n          }, 3000);\n        }\n      );\n    }\n  }\n\n  showToast(message: string, type: string) {\n    this.toastMessage = message;\n    this.toastType = type;\n    if (this.toastTimeout) {\n      clearTimeout(this.toastTimeout);\n    }\n    this.toastTimeout = setTimeout(() => {\n      this.toastMessage = '';\n    }, 3000);\n  }\n\n  undoDeleteUser() {\n    if (this.lastDeletedUser) {\n      const user = this.lastDeletedUser;\n      this.userService.restoreUser(user);\n      this.showToast(`User '${user.name}' has been restored.`, 'undo');\n      this.lastDeletedUser = null;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}