{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class RoleGuard {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n  }\n  canActivate(route) {\n    const roles = route.data['roles'];\n    if (this.auth.isLoggedIn() && this.auth.hasAnyRole(roles)) {\n      return true;\n    }\n    return this.router.createUrlTree(['/unauthorized']);\n  }\n  static {\n    this.ɵfac = function RoleGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RoleGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RoleGuard,\n      factory: RoleGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["RoleGuard","constructor","auth","router","canActivate","route","roles","data","isLoggedIn","hasAnyRole","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\core\\guards\\role.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router, UrlTree } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoleGuard implements CanActivate {\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean | UrlTree {\r\n    const roles = route.data['roles'] as string[];\r\n    if (this.auth.isLoggedIn() && this.auth.hasAnyRole(roles)) {\r\n      return true;\r\n    }\r\n    return this.router.createUrlTree(['/unauthorized']);\r\n  }\r\n} "],"mappings":";;;AAKA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,IAAiB,EAAUC,MAAc;IAAzC,KAAAD,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEhEC,WAAWA,CAACC,KAA6B;IACvC,MAAMC,KAAK,GAAGD,KAAK,CAACE,IAAI,CAAC,OAAO,CAAa;IAC7C,IAAI,IAAI,CAACL,IAAI,CAACM,UAAU,EAAE,IAAI,IAAI,CAACN,IAAI,CAACO,UAAU,CAACH,KAAK,CAAC,EAAE;MACzD,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACH,MAAM,CAACO,aAAa,CAAC,CAAC,eAAe,CAAC,CAAC;EACrD;;;uCATWV,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAThB,SAAS;MAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;MAAAC,UAAA,EADI;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}