{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/loading.service\";\nexport class LoadingInterceptor {\n  constructor(loadingService) {\n    this.loadingService = loadingService;\n  }\n  intercept(req, next) {\n    // Show loading indicator\n    this.loadingService.show();\n    return next.handle(req).pipe(finalize(() => {\n      // Hide loading indicator when request completes\n      this.loadingService.hide();\n    }));\n  }\n  static {\n    this.ɵfac = function LoadingInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoadingInterceptor)(i0.ɵɵinject(i1.LoadingService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoadingInterceptor,\n      factory: LoadingInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["finalize","LoadingInterceptor","constructor","loadingService","intercept","req","next","show","handle","pipe","hide","i0","ɵɵinject","i1","LoadingService","factory","ɵfac"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\core\\interceptors\\loading.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoadingService } from '../services/loading.service';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  \n  constructor(private loadingService: LoadingService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Show loading indicator\n    this.loadingService.show();\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        // Hide loading indicator when request completes\n        this.loadingService.hide();\n      })\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,QAAQ,QAAQ,gBAAgB;;;AAIzC,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAErDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD;IACA,IAAI,CAACH,cAAc,CAACI,IAAI,EAAE;IAE1B,OAAOD,IAAI,CAACE,MAAM,CAACH,GAAG,CAAC,CAACI,IAAI,CAC1BT,QAAQ,CAAC,MAAK;MACZ;MACA,IAAI,CAACG,cAAc,CAACO,IAAI,EAAE;IAC5B,CAAC,CAAC,CACH;EACH;;;uCAdWT,kBAAkB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;aAAlBb,kBAAkB;MAAAc,OAAA,EAAlBd,kBAAkB,CAAAe;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}