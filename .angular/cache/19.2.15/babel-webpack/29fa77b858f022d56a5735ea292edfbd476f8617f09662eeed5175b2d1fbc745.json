{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, tap, finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class HttpRequestInterceptor {\n  constructor() {\n    this.activeRequests = 0;\n  }\n  intercept(req, next) {\n    // Increment active requests counter\n    this.activeRequests++;\n    // Add common headers\n    const modifiedReq = req.clone({\n      setHeaders: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n    console.log(`HTTP Request: ${modifiedReq.method} ${modifiedReq.url}`);\n    const startTime = Date.now();\n    return next.handle(modifiedReq).pipe(tap(event => {\n      if (event instanceof HttpResponse) {\n        const duration = Date.now() - startTime;\n        console.log(`HTTP Response: ${event.status} ${modifiedReq.url} (${duration}ms)`);\n      }\n    }), catchError(error => {\n      const duration = Date.now() - startTime;\n      console.error(`HTTP Error: ${error.status} ${modifiedReq.url} (${duration}ms)`, error);\n      // Handle different error types\n      switch (error.status) {\n        case 401:\n          console.warn('Unauthorized access - redirecting to login');\n          break;\n        case 403:\n          console.warn('Forbidden access');\n          break;\n        case 404:\n          console.warn('Resource not found');\n          break;\n        case 500:\n          console.error('Internal server error');\n          break;\n        default:\n          console.error('Unknown error occurred');\n      }\n      return throwError(() => error);\n    }), finalize(() => {\n      // Decrement active requests counter\n      this.activeRequests--;\n      console.log(`Active HTTP requests: ${this.activeRequests}`);\n    }));\n  }\n  getActiveRequestsCount() {\n    return this.activeRequests;\n  }\n  static {\n    this.ɵfac = function HttpRequestInterceptor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || HttpRequestInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpRequestInterceptor,\n      factory: HttpRequestInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HttpResponse","throwError","catchError","tap","finalize","HttpRequestInterceptor","constructor","activeRequests","intercept","req","next","modifiedReq","clone","setHeaders","console","log","method","url","startTime","Date","now","handle","pipe","event","duration","status","error","warn","getActiveRequestsCount","factory","ɵfac"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\core\\interceptors\\http.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n  private activeRequests = 0;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // Increment active requests counter\n    this.activeRequests++;\n    \n    // Add common headers\n    const modifiedReq = req.clone({\n      setHeaders: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-Requested-With': 'XMLHttpRequest'\n      }\n    });\n\n    console.log(`HTTP Request: ${modifiedReq.method} ${modifiedReq.url}`);\n    const startTime = Date.now();\n\n    return next.handle(modifiedReq).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          const duration = Date.now() - startTime;\n          console.log(`HTTP Response: ${event.status} ${modifiedReq.url} (${duration}ms)`);\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        const duration = Date.now() - startTime;\n        console.error(`HTTP Error: ${error.status} ${modifiedReq.url} (${duration}ms)`, error);\n        \n        // Handle different error types\n        switch (error.status) {\n          case 401:\n            console.warn('Unauthorized access - redirecting to login');\n            break;\n          case 403:\n            console.warn('Forbidden access');\n            break;\n          case 404:\n            console.warn('Resource not found');\n            break;\n          case 500:\n            console.error('Internal server error');\n            break;\n          default:\n            console.error('Unknown error occurred');\n        }\n\n        return throwError(() => error);\n      }),\n      finalize(() => {\n        // Decrement active requests counter\n        this.activeRequests--;\n        console.log(`Active HTTP requests: ${this.activeRequests}`);\n      })\n    );\n  }\n\n  getActiveRequestsCount(): number {\n    return this.activeRequests;\n  }\n}\n"],"mappings":"AACA,SAA+DA,YAAY,QAA2B,sBAAsB;AAC5H,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;;AAG1D,OAAM,MAAOC,sBAAsB;EADnCC,YAAA;IAEU,KAAAC,cAAc,GAAG,CAAC;;EAE1BC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD;IACA,IAAI,CAACH,cAAc,EAAE;IAErB;IACA,MAAMI,WAAW,GAAGF,GAAG,CAACG,KAAK,CAAC;MAC5BC,UAAU,EAAE;QACV,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,kBAAkB;QAC5B,kBAAkB,EAAE;;KAEvB,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,iBAAiBJ,WAAW,CAACK,MAAM,IAAIL,WAAW,CAACM,GAAG,EAAE,CAAC;IACrE,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,EAAE;IAE5B,OAAOV,IAAI,CAACW,MAAM,CAACV,WAAW,CAAC,CAACW,IAAI,CAClCnB,GAAG,CAAEoB,KAAqB,IAAI;MAC5B,IAAIA,KAAK,YAAYvB,YAAY,EAAE;QACjC,MAAMwB,QAAQ,GAAGL,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS;QACvCJ,OAAO,CAACC,GAAG,CAAC,kBAAkBQ,KAAK,CAACE,MAAM,IAAId,WAAW,CAACM,GAAG,KAAKO,QAAQ,KAAK,CAAC;MAClF;IACF,CAAC,CAAC,EACFtB,UAAU,CAAEwB,KAAwB,IAAI;MACtC,MAAMF,QAAQ,GAAGL,IAAI,CAACC,GAAG,EAAE,GAAGF,SAAS;MACvCJ,OAAO,CAACY,KAAK,CAAC,eAAeA,KAAK,CAACD,MAAM,IAAId,WAAW,CAACM,GAAG,KAAKO,QAAQ,KAAK,EAAEE,KAAK,CAAC;MAEtF;MACA,QAAQA,KAAK,CAACD,MAAM;QAClB,KAAK,GAAG;UACNX,OAAO,CAACa,IAAI,CAAC,4CAA4C,CAAC;UAC1D;QACF,KAAK,GAAG;UACNb,OAAO,CAACa,IAAI,CAAC,kBAAkB,CAAC;UAChC;QACF,KAAK,GAAG;UACNb,OAAO,CAACa,IAAI,CAAC,oBAAoB,CAAC;UAClC;QACF,KAAK,GAAG;UACNb,OAAO,CAACY,KAAK,CAAC,uBAAuB,CAAC;UACtC;QACF;UACEZ,OAAO,CAACY,KAAK,CAAC,wBAAwB,CAAC;MAC3C;MAEA,OAAOzB,UAAU,CAAC,MAAMyB,KAAK,CAAC;IAChC,CAAC,CAAC,EACFtB,QAAQ,CAAC,MAAK;MACZ;MACA,IAAI,CAACG,cAAc,EAAE;MACrBO,OAAO,CAACC,GAAG,CAAC,yBAAyB,IAAI,CAACR,cAAc,EAAE,CAAC;IAC7D,CAAC,CAAC,CACH;EACH;EAEAqB,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACrB,cAAc;EAC5B;;;uCA5DWF,sBAAsB;IAAA;EAAA;;;aAAtBA,sBAAsB;MAAAwB,OAAA,EAAtBxB,sBAAsB,CAAAyB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}