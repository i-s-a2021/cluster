{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nexport class LoginComponent {\n  constructor(auth, router) {\n    this.auth = auth;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    this.error = null;\n  }\n  onSubmit() {\n    this.auth.login(this.username, this.password).subscribe({\n      next: () => this.router.navigate(['/dashboard']),\n      error: () => this.error = 'Invalid credentials'\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 13,\n      vars: 3,\n      consts: [[\"loginForm\", \"ngForm\"], [1, \"login-form\", 3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\", 1, \"form-label\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-2\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 1, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n          i0.ɵɵtext(4, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"button\", 7);\n          i0.ɵɵtext(11, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n        }\n      },\n      dependencies: [CommonModule, i3.NgIf, FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\".login-form[_ngcontent-%COMP%] {\\n      max-width: 350px;\\n      margin: 0 auto;\\n      padding: 2rem;\\n      background: #fff;\\n      border-radius: 1rem;\\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUNJO01BQ0UsZ0JBQWdCO01BQ2hCLGNBQWM7TUFDZCxhQUFhO01BQ2IsZ0JBQWdCO01BQ2hCLG1CQUFtQjtNQUNuQix1Q0FBdUM7SUFDekMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAubG9naW4tZm9ybSB7XG4gICAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgICBib3gtc2hhZG93OiAwIDJweCAxMnB4IHJnYmEoMCwwLDAsMC4wNik7XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","error","LoginComponent","constructor","auth","router","username","password","onSubmit","login","subscribe","next","navigate","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtwoWayListener","LoginComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_9_listener","ɵɵtemplate","LoginComponent_div_12_Template","ɵɵtwoWayProperty","ɵɵproperty","i3","NgIf","i4","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\features\\auth\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\" class=\"login-form\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"username\" class=\"form-label\">Username</label>\r\n        <input id=\"username\" name=\"username\" class=\"form-control\" [(ngModel)]=\"username\" required />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\" class=\"form-label\">Password</label>\r\n        <input id=\"password\" name=\"password\" type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" required />\r\n      </div>\r\n      <button class=\"btn btn-primary w-100\" type=\"submit\">Login</button>\r\n      <div *ngIf=\"error\" class=\"text-danger mt-2\">{{ error }}</div>\r\n    </form>\r\n  `,\r\n  styles: [`\r\n    .login-form {\r\n      max-width: 350px;\r\n      margin: 0 auto;\r\n      padding: 2rem;\r\n      background: #fff;\r\n      border-radius: 1rem;\r\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent {\r\n  username = '';\r\n  password = '';\r\n  error: string | null = null;\r\n\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  onSubmit() {\r\n    this.auth.login(this.username, this.password).subscribe({\r\n      next: () => this.router.navigate(['/dashboard']),\r\n      error: () => this.error = 'Invalid credentials'\r\n    });\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}