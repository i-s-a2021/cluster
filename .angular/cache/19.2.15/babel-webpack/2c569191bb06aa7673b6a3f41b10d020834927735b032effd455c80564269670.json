{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \"You are already logged in.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(auth, router, route) {\n    this.auth = auth;\n    this.router = router;\n    this.route = route;\n    this.username = '';\n    this.password = '';\n    this.error = null;\n    this.redirectUrl = null;\n  }\n  ngOnInit() {\n    this.redirectUrl = this.route.snapshot.queryParamMap.get('redirectUrl');\n    if (this.auth.isLoggedIn()) {\n      setTimeout(() => this.router.navigate([this.redirectUrl || '/dashboard']), 1000);\n    }\n  }\n  onSubmit() {\n    if (this.auth.isLoggedIn()) return;\n    this.auth.login(this.username, this.password).subscribe({\n      next: () => {\n        this.error = null;\n        this.router.navigate([this.redirectUrl || '/dashboard']);\n      },\n      error: () => this.error = 'Invalid credentials'\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 5,\n      consts: [[\"loginForm\", \"ngForm\"], [1, \"login-form\", 3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"password\", 1, \"form-label\"], [\"id\", \"password\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [\"class\", \"alert alert-success mt-2\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-2\"], [1, \"alert\", \"alert-success\", \"mt-2\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"form\", 1, 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSubmit());\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n          i0.ɵɵtext(4, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 6);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"button\", 7);\n          i0.ɵɵtext(11, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 2, 1, \"div\", 8)(13, LoginComponent_div_13_Template, 2, 0, \"div\", 9);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.auth.isLoggedIn());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.auth.isLoggedIn());\n        }\n      },\n      dependencies: [CommonModule, i3.NgIf, FormsModule, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      styles: [\".login-form[_ngcontent-%COMP%] {\\n      max-width: 350px;\\n      margin: 0 auto;\\n      padding: 2rem;\\n      background: #fff;\\n      border-radius: 1rem;\\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvYXV0aC9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUNJO01BQ0UsZ0JBQWdCO01BQ2hCLGNBQWM7TUFDZCxhQUFhO01BQ2IsZ0JBQWdCO01BQ2hCLG1CQUFtQjtNQUNuQix1Q0FBdUM7SUFDekMiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAubG9naW4tZm9ybSB7XG4gICAgICBtYXgtd2lkdGg6IDM1MHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XG4gICAgICBib3gtc2hhZG93OiAwIDJweCAxMnB4IHJnYmEoMCwwLDAsMC4wNik7XG4gICAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","error","LoginComponent","constructor","auth","router","route","username","password","redirectUrl","ngOnInit","snapshot","queryParamMap","get","isLoggedIn","setTimeout","navigate","onSubmit","login","subscribe","next","ɵɵdirectiveInject","i1","AuthService","i2","Router","ActivatedRoute","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtwoWayListener","LoginComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtwoWayBindingSet","LoginComponent_Template_input_ngModelChange_9_listener","ɵɵtemplate","LoginComponent_div_12_Template","LoginComponent_div_13_Template","ɵɵtwoWayProperty","ɵɵproperty","i3","NgIf","i4","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","NgModel","NgForm","styles"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\features\\auth\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from '../../core/services/auth.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <form (ngSubmit)=\"onSubmit()\" #loginForm=\"ngForm\" class=\"login-form\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"username\" class=\"form-label\">Username</label>\r\n        <input id=\"username\" name=\"username\" class=\"form-control\" [(ngModel)]=\"username\" required />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"password\" class=\"form-label\">Password</label>\r\n        <input id=\"password\" name=\"password\" type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" required />\r\n      </div>\r\n      <button class=\"btn btn-primary w-100\" type=\"submit\" [disabled]=\"auth.isLoggedIn()\">Login</button>\r\n      <div *ngIf=\"error\" class=\"text-danger mt-2\">{{ error }}</div>\r\n      <div *ngIf=\"auth.isLoggedIn()\" class=\"alert alert-success mt-2\">You are already logged in.</div>\r\n    </form>\r\n  `,\r\n  styles: [`\r\n    .login-form {\r\n      max-width: 350px;\r\n      margin: 0 auto;\r\n      padding: 2rem;\r\n      background: #fff;\r\n      border-radius: 1rem;\r\n      box-shadow: 0 2px 12px rgba(0,0,0,0.06);\r\n    }\r\n  `]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username = '';\r\n  password = '';\r\n  error: string | null = null;\r\n  redirectUrl: string | null = null;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.redirectUrl = this.route.snapshot.queryParamMap.get('redirectUrl');\r\n    if (this.auth.isLoggedIn()) {\r\n      setTimeout(() => this.router.navigate([this.redirectUrl || '/dashboard']), 1000);\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.auth.isLoggedIn()) return;\r\n    this.auth.login(this.username, this.password).subscribe({\r\n      next: () => {\r\n        this.error = null;\r\n        this.router.navigate([this.redirectUrl || '/dashboard']);\r\n      },\r\n      error: () => this.error = 'Invalid credentials'\r\n    });\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}