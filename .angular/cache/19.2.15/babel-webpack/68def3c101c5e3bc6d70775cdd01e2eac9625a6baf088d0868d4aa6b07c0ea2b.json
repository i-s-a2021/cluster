{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { LoadingComponent } from '../../../shared/components/loading/loading.component';\nlet NewsListComponent = class NewsListComponent {\n  constructor(fb, newsService) {\n    this.fb = fb;\n    this.newsService = newsService;\n    this.showArchived = false;\n    this.filterForm = this.fb.group({\n      searchTerm: [''],\n      tags: [[]],\n      status: ['']\n    });\n    this.availableTags$ = this.newsService.getAvailableTags();\n    this.isLoading$ = this.newsService.isLoading$;\n    this.filteredNews$ = this.filterForm.valueChanges.pipe(startWith(this.filterForm.value), switchMap(formValue => this.newsService.getFilteredNews({\n      ...formValue,\n      isArchived: this.showArchived ? true : undefined,\n      status: formValue.status || undefined\n    })));\n  }\n  ngOnInit() {}\n  resetFilters() {\n    this.filterForm.reset({\n      searchTerm: '',\n      tags: [],\n      status: ''\n    });\n    this.filterForm.updateValueAndValidity();\n  }\n  toggleArchived() {\n    this.showArchived = !this.showArchived;\n    this.filterForm.updateValueAndValidity();\n  }\n  toggleArchive(news) {\n    // Implement archive logic\n  }\n};\nNewsListComponent = __decorate([Component({\n  selector: 'app-news-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, LoadingComponent],\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.scss']\n})], NewsListComponent);\nexport { NewsListComponent };","map":{"version":3,"names":["Component","CommonModule","RouterModule","ReactiveFormsModule","startWith","switchMap","LoadingComponent","NewsListComponent","constructor","fb","newsService","showArchived","filterForm","group","searchTerm","tags","status","availableTags$","getAvailableTags","isLoading$","filteredNews$","valueChanges","pipe","value","formValue","getFilteredNews","isArchived","undefined","ngOnInit","resetFilters","reset","updateValueAndValidity","toggleArchived","toggleArchive","news","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["C:\\Users\\ibrahim\\Desktop\\projectPort-new\\src\\app\\features\\news\\news-list\\news-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, ActivatedRoute } from '@angular/router';\nimport { ReactiveFormsModule, FormBuilder, FormGroup } from '@angular/forms';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\n\nimport { NewsService } from '../../../core/services/news.service';\nimport { News, NewsFilter } from '../../../core/models/news.model';\nimport { LoadingComponent } from '../../../shared/components/loading/loading.component';\n\n@Component({\n  selector: 'app-news-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, LoadingComponent],\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.scss']\n})\nexport class NewsListComponent implements OnInit {\n  showArchived = false;\n  filterForm: FormGroup;\n  availableTags$: Observable<string[]>;\n  isLoading$: Observable<boolean>;\n  filteredNews$: Observable<News[]>;\n\n  constructor(private fb: FormBuilder, private newsService: NewsService) {\n    this.filterForm = this.fb.group({\n      searchTerm: [''],\n      tags: [[]],\n      status: ['']\n    });\n    this.availableTags$ = this.newsService.getAvailableTags();\n    this.isLoading$ = this.newsService.isLoading$;\n    this.filteredNews$ = this.filterForm.valueChanges.pipe(\n      startWith(this.filterForm.value),\n      switchMap(formValue => this.newsService.getFilteredNews({\n        ...formValue,\n        isArchived: this.showArchived ? true : undefined,\n        status: formValue.status || undefined\n      }))\n    );\n  }\n\n  ngOnInit(): void {}\n\n  resetFilters() {\n    this.filterForm.reset({ searchTerm: '', tags: [], status: '' });\n    this.filterForm.updateValueAndValidity();\n  }\n\n  toggleArchived() {\n    this.showArchived = !this.showArchived;\n    this.filterForm.updateValueAndValidity();\n  }\n\n  toggleArchive(news: News) {\n    // Implement archive logic\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,YAAY,QAAwB,iBAAiB;AAC9D,SAASC,mBAAmB,QAAgC,gBAAgB;AAE5E,SAAcC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;AAI1D,SAASC,gBAAgB,QAAQ,sDAAsD;AAShF,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,EAAe,EAAUC,WAAwB;IAAjD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,WAAW,GAAXA,WAAW;IANxD,KAAAC,YAAY,GAAG,KAAK;IAOlB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC,EAAE;KACZ,CAAC;IACF,IAAI,CAACC,cAAc,GAAG,IAAI,CAACP,WAAW,CAACQ,gBAAgB,EAAE;IACzD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACT,WAAW,CAACS,UAAU;IAC7C,IAAI,CAACC,aAAa,GAAG,IAAI,CAACR,UAAU,CAACS,YAAY,CAACC,IAAI,CACpDlB,SAAS,CAAC,IAAI,CAACQ,UAAU,CAACW,KAAK,CAAC,EAChClB,SAAS,CAACmB,SAAS,IAAI,IAAI,CAACd,WAAW,CAACe,eAAe,CAAC;MACtD,GAAGD,SAAS;MACZE,UAAU,EAAE,IAAI,CAACf,YAAY,GAAG,IAAI,GAAGgB,SAAS;MAChDX,MAAM,EAAEQ,SAAS,CAACR,MAAM,IAAIW;KAC7B,CAAC,CAAC,CACJ;EACH;EAEAC,QAAQA,CAAA,GAAU;EAElBC,YAAYA,CAAA;IACV,IAAI,CAACjB,UAAU,CAACkB,KAAK,CAAC;MAAEhB,UAAU,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE,CAAC;IAC/D,IAAI,CAACJ,UAAU,CAACmB,sBAAsB,EAAE;EAC1C;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAACrB,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;IACtC,IAAI,CAACC,UAAU,CAACmB,sBAAsB,EAAE;EAC1C;EAEAE,aAAaA,CAACC,IAAU;IACtB;EAAA;CAEH;AAxCY3B,iBAAiB,GAAA4B,UAAA,EAP7BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,eAAe;EACzBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACrC,YAAY,EAAEC,YAAY,EAAEC,mBAAmB,EAAEG,gBAAgB,CAAC;EAC5EiC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,4BAA4B;CACzC,CAAC,C,EACWjC,iBAAiB,CAwC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}