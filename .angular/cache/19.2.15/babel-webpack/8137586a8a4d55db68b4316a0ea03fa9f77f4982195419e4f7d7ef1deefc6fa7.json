{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor() {\n      this.isDarkMode$ = new BehaviorSubject(false);\n      this.initializeTheme();\n    }\n    initializeTheme() {\n      const savedTheme = localStorage.getItem('theme');\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      const isDark = savedTheme === 'dark' || !savedTheme && prefersDark;\n      this.setTheme(isDark);\n    }\n    isDarkMode() {\n      return this.isDarkMode$.asObservable();\n    }\n    toggleTheme() {\n      const currentTheme = this.isDarkMode$.value;\n      this.setTheme(!currentTheme);\n    }\n    setTheme(isDark) {\n      this.isDarkMode$.next(isDark);\n      document.body.classList.toggle('dark-mode', isDark);\n      localStorage.setItem('theme', isDark ? 'dark' : 'light');\n    }\n    static {\n      this.ɵfac = function ThemeService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || ThemeService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ThemeService,\n        factory: ThemeService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ThemeService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}